/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        return helper(inorder,postorder,0,inorder.length-1,0,postorder.length-1);
    }
    
    public TreeNode helper(int[] inorder, int[] postorder, int instart, int inend, int poststart, int postend){
        if(instart==inend){
            TreeNode root = new TreeNode(inorder[instart]);
            return root;
        }
        else if(instart>inend){
            return null;
        }
        TreeNode root = new TreeNode(postorder[postend]);
        int i=instart;
        for(;i<=inend;i++){
            if(inorder[i]==postorder[postend])
                break;
        }
        root.left = helper(inorder,postorder,instart,i-1,poststart,i-instart+poststart-1);
        root.right = helper(inorder,postorder,i+1,inend,i-instart+poststart,postend-1);
        return root;
    }
}
