class Solution {
    public List<String> removeInvalidParentheses(String s) {
        List<String> ans = new ArrayList();
        char[] par = new char[2];
        par[0] = '(';
        par[1] = ')';
        remove(ans,s,0,0,par);
        return ans;
    }
    
    public void remove(List<String> ans,String s, int last_i, int last_j, char[] par){
        int stack=0;
        for(int i=last_i;i<s.length();i++){
            if(s.charAt(i)==par[0])
                stack++;
            if(s.charAt(i)==par[1])
                stack--;
            if(stack>=0) 
                continue;
            for(int j=last_j;j<=i;j++){
                if(s.charAt(j)==par[1]&&(j==last_j||s.charAt(j-1)!=par[1]))
                    remove(ans,s.substring(0,j)+s.substring(j+1),i,j,par);
            }
            return;
        }
        
        String reversed = new StringBuilder(s).reverse().toString();
        if(par[0]=='('){
            remove(ans,reversed,0,0,new char[]{')','('});
        }
        else{
            ans.add(reversed);
        }
    }
}
