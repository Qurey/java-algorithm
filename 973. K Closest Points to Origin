class point{
    int sqrt;
    int x;
    int y;
    point(int x,int y){
        this.x=x;
        this.y=y;
        sqrt=x*x+y*y;
    }
}

class Solution {
    public int[][] kClosest(int[][] points, int K) {
        int[][] ans=new int[K][2];
        PriorityQueue<point> pq=new PriorityQueue(new Comparator<point>(){
            public int compare(point a,point b){
                return b.sqrt-a.sqrt;
            }
        });
        for(int i=0;i<points.length;i++){
            pq.offer(new point(points[i][0],points[i][1]));
            if(pq.size()>K){
                pq.poll();
            }
        }
        int i=0;
        while(pq.size()>0){
            point p=pq.poll();
            ans[i][0]=p.x;
            ans[i][1]=p.y;
            i++;
        }
        return ans;
    }
}
