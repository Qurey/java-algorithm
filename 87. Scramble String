class Solution {
    public boolean isScramble(String s1, String s2) {
        int num=s1.length();
        // if(s1.length()==0)
        //     return true;
        // else if(num==1){
        //     if(s1.charAt(0)==s2.charAt(0))
        //        return true;
        //     else
        //         return false;
        // }
        // else if(num==2){
        //     if((s1.charAt(0)==s2.charAt(0)&&s1.charAt(1)==s2.charAt(1))
        //        ||(s1.charAt(0)==s2.charAt(1)&&s1.charAt(1)==s2.charAt(0)))
        //        return true;
        //     else
        //         return false;
        // }
        if (s1.equals(s2)) return true; 
        
        int[] letters = new int[26];
        for (int i=0; i<s1.length(); i++) {
            letters[s1.charAt(i)-'a']++;
            letters[s2.charAt(i)-'a']--;
        }
        for (int i=0; i<26; i++) if (letters[i]!=0) return false;
        for(int i=1;i<=num-1;i++){
            if(isScramble(s1.substring(0,i),s2.substring(0,i))
               &&isScramble(s1.substring(i,num),s2.substring(i,num)))
                return true;
            if(isScramble(s1.substring(0,i),s2.substring(num-i))
               &&isScramble(s1.substring(i,num),s2.substring(0,num-i)))
                return true;
        }
        return false;
    }
}

// if (isScramble(s1.substring(0,i), s2.substring(0,i)) 
//              && isScramble(s1.substring(i), s2.substring(i))) return true;
//             if (isScramble(s1.substring(0,i), s2.substring(s2.length()-i)) 
//              && isScramble(s1.substring(i), s2.substring(0,s2.length()-i))) return true;
