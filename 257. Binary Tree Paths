/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> ans=new ArrayList();
        StringBuilder sb=new StringBuilder();
        if(root==null)
            return ans;
        else if(root.left==null&&root.right==null){
            sb=new StringBuilder();
            sb.append(root.val);
            ans.add(sb.toString());
            return ans;
        }
        else{
            List<String> left=binaryTreePaths(root.left);
            List<String> right=binaryTreePaths(root.right);
            for(String s:left){
                sb=new StringBuilder();
                sb.append(root.val);
                sb.append("->");
                sb.append(s);
                ans.add(sb.toString());
            }
            for(String s:right){
                sb=new StringBuilder();
                sb.append(root.val);
                sb.append("->");
                sb.append(s);
                ans.add(sb.toString());
            }
            return ans;
        }
    }
}
