// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html
class PeekingIterator implements Iterator<Integer> {
    private Iterator<Integer> it;
    private boolean hasPeeked;
    private Integer peekedElement;
	public PeekingIterator(Iterator<Integer> iterator) {
	    // initialize any member here.
        if(iterator==null){
            throw new NullPointerException();
        }
        it=iterator;
	    
	}

    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
       peekedElement = hasPeeked?peekedElement:it.next();
        hasPeeked = true;
        return peekedElement;
	}

	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
	    Integer next1 = hasPeeked?peekedElement:it.next();
        hasPeeked = false;
        return next1;
	}

	@Override
	public boolean hasNext() {
	    return hasPeeked||it.hasNext();
	}
}
