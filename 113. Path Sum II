/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> ans=new ArrayList();
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<Integer> pos=new ArrayList();
        if(root==null)
            return ans;
        else if(root.val==sum&&root.left==null&&root.right==null){
            pos.add(root.val);
            ans.add(pos);
            return ans;
        }
        else{
            pos.add(root.val);
            traverse(root.left,pos,sum-root.val);
            traverse(root.right,pos,sum-root.val);
        }
        return ans;
    }
    
    public void traverse(TreeNode root,List<Integer> pos,int sum){
        if(root==null)
            return;
        pos.add(root.val);
        if(sum==root.val&&root.left==null&&root.right==null){
            ans.add(new ArrayList<>(pos));
            pos.remove(pos.size()-1);
            return;
        }
            
        else{
            traverse(root.left,pos,sum-root.val);
            traverse(root.right,pos,sum-root.val);
        }
        pos.remove(pos.size()-1);
            return;
    }
}
