class Solution {
    public int divide(int dividend, int divisor) {
        int sign=1,ans=0;
        if ((dividend > 0 && divisor < 0) || (dividend < 0 && divisor > 0))
		    sign = -1;
        long ldividend = Math.abs((long) dividend);
	    long ldivisor = Math.abs((long) divisor);
        long lans=0;
	    if ((ldividend == 0) || (ldividend < ldivisor))	return 0;
        while(ldividend>=ldivisor){
            long pow=1;
            long ldivisor1=ldivisor;
            while(ldivisor1+ldivisor1<=ldividend){
                ldivisor1+=ldivisor1;
                pow+=pow;
            }
                ldividend-=ldivisor1;
                lans+=pow;
        }
        if (lans > Integer.MAX_VALUE){ //Handle overflow.
		    ans = (sign == 1)? Integer.MAX_VALUE : Integer.MIN_VALUE;
        } 
        else {
		    ans = (int)(sign * lans);
        }
	    return ans;
    }
}
