import java.util.*;

//input string has +, - , (, ),  and 字符 / 字串变量
//        code = {
//        e : 1,
//        y : 2,.
//        temperature : 5
//        }
//        input string:
//        (e + 8) - pressure + 3 - temperature

class cell{
    int sum;
    int sign;
    String str;
    public cell(int s, int sign, String str){
        this.sum=s;
        this.sign=sign;
        this.str=str;
    }
}
public class Main {

    public static void main(String[] args) {
        HashMap<String,Integer> dic=new HashMap<>();
        dic.put("e",1);
        dic.put("y",2);
        dic.put("temperature",5);
        String s=expresscalculator("(e + 8) - pressure + 3 - temperature",dic);
        System.out.println(s);

    }

    public static String expresscalculator(String input, Map<String,Integer> map) {
        String s=input.replaceAll(" ","");
        s=simplify(s,map);
        int num=0,sum=0,sign=1;
        StringBuilder sb=new StringBuilder();
        Stack<cell> dic=new Stack();
        for(int i=0;i<s.length();i++){
            char c=s.charAt(i);
            if(Character.isDigit(c)){
                num=num*10+c-'0';
            }
            else if(c=='+'||c=='-'){
                sum+=sign*num;
                num=0;
                sign=c=='+'?1:-1;
            }
            else if(c>='a'&&c<='z'){
                if(sign==1)
                    sb.append('+');
                else
                    sb.append("-");
                while(i<s.length()&&s.charAt(i)>='a'&&s.charAt(i)<='z'){
                    sb.append(s.charAt(i));
                    i++;
                }
                i--;
            }
            else if(c=='('){
                dic.push(new cell(sum,sign,sb.toString()));
                sum=0;
                sign=1;
                sb=new StringBuilder();
            }
            else if(c==')'){
                cell pre=dic.pop();
                sum+=num*sign;
                sum=pre.sign*sum+pre.sum;
                StringBuilder k=new StringBuilder();
                k.append(pre.str);
                if(sb.length()>0){
                    k.append(update(pre.sign,sb.toString()));
                }
                sb=k;
                num=0;
                sign=1;
            }
        }
        sum+=num*sign;
        sb.insert(0,sum);
        return sb.toString();
    }

    public static String update(int sign, String s){
        StringBuilder sb=new StringBuilder();
        if(sign==1)
            return s;
        for(int i=0;i<s.length();i++){
            char c=s.charAt(i);
            if(c=='+')
                sb.append('-');
            else if(c=='-')
                sb.append('+');
            else
                sb.append(c);

        }
        return sb.toString();
    }
    public static String simplify(String s,Map<String,Integer> map){
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<s.length();i++){
            char c=s.charAt(i);
            if(c>='a'&&c<='z'){
                StringBuilder t=new StringBuilder();
                while(i<s.length()&&s.charAt(i)>='a'&&s.charAt(i)<='z'){
                    t.append(s.charAt(i));
                    i++;
                }
                if(map.containsKey(t.toString())){
                    sb.append(map.get(t.toString()));
                }
                else{
                    sb.append(t.toString());
                }
                i--;
            }
            else{
                sb.append(c);
            }
        }
        return sb.toString();
    }


}
