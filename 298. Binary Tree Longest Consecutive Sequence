/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int longestConsecutive(TreeNode root) {
        int[] ans = new int[1];
        ans[0]=0;
        helper(root,ans);
        return ans[0];
    }
    
    public int helper(TreeNode root,int[] ans) {
        int ret=1;
        if(root==null)
            return 0;
        if(root.left==null&&root.right==null){
            ans[0] = ret>ans[0]?ret:ans[0];
            return ret;
        }
        int left=helper(root.left,ans), right=helper(root.right,ans);
        if((root.left==null||root.left.val!=root.val+1)
            &&(root.right==null||root.right.val!=root.val+1)){
            return ret;
        }
        else if(root.left!=null&&root.left.val==root.val+1){
            ret += left;
            ans[0] = ret>ans[0]?ret:ans[0];
        }
        else if(root.right!=null&&root.right.val==root.val+1){
            ret += right;
            ans[0] = ret>ans[0]?ret:ans[0];
        }
        return ret;
    }
}
