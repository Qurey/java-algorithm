class Solution {
    public String longestPalindrome(String s) {
        int len=s.length();
        if(len==0){
            String s1="";
            return s1;
        }
        int p[][]=new int[len][len];
        for(int i=0;i<len;i++){
            p[i][i]=1;
        }
        for(int i=0;i<(len-1);i++){
            if(s.charAt(i)==s.charAt(i+1))
                p[i][i+1]=1;
            else
                p[i][i+1]=0;
        }
        for(int k=2;k<len;k++){
            for(int i=0;(i+k)<len;i++){
                if(s.charAt(i)==s.charAt(i+k)&&p[i+1][i+k-1]==1)
                    p[i][i+k]=1;
                else
                    p[i][i+k]=0;
            }
        }
        int num1=0,num2=0,ans=0,k=0;
        for(int j=0;j<len;j++){
            for(int i=0;(i+j)<len;i++){
                if(p[i][i+j]==1&&j>ans){
                    num1=i;
                    num2=i+j;
                    ans=j;
                }
            }
        }
        char long1[]=new char[ans+1];
        for(int i=num1;i<=num2;i++){
            long1[k++]=s.charAt(i);
        }
        String s1=new String(long1);
        return s1;
    }
}
