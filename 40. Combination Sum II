class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> ans = new ArrayList();
        List<Integer> tmp = new ArrayList();
        helper(ans,tmp,candidates,target,0);
        return ans;
        
    }
    
    public void helper(List<List<Integer>> ans, List<Integer> tmp, int[] candidates, int target, int start){
        if(target==0){
            ans.add(new ArrayList<Integer>(tmp));
            return;
        }
        else if(target<0)
            return;
        for(int i=start;i<candidates.length;i++){
            if(i>start&&candidates[i]==candidates[i-1]) continue;
            tmp.add(candidates[i]);
            helper(ans,tmp,candidates,target-candidates[i],i+1);
            tmp.remove(tmp.size()-1);
        }
        return;
    }
}
